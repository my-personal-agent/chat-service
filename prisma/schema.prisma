generator client {
    provider             = "prisma-client-py"
    recursive_type_depth = 5
    output               = "../src/db/prisma/generated"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_DATABASE_URL")
}

model User {
    id        String  @id @default(uuid())
    firstName String
    lastName  String?
    nickName  String
    timezone  String
    language  String

    connectors Connector[]
    chats      Chat[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Connector {
    id             String        @id @default(uuid())
    connector_id   String        @unique
    connector_type ConnectorType

    User   User   @relation(fields: [userId], references: [id])
    userId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Chat {
    id         String  @id @default(uuid())
    title      String
    isTitleSet Boolean @default(false)
    timestamp  Float

    User   User   @relation(fields: [userId], references: [id])
    userId String

    messages ChatMessage[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ChatMessage {
    id        String @id @default(uuid())
    content   Json
    role      Role
    timestamp Float

    groupId String

    chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)
    chatId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum Role {
    user
    assistant
    system
    confirmation
}

enum ConnectorType {
    gmail
}
